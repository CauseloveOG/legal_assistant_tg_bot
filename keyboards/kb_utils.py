from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from lexicon.lexicon import LEXICON


# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_inline_kb(width: int,
                     *args: str,
                     **kwargs: str) -> InlineKeyboardMarkup:

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–ª–¥–µ—Ä–∞ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb_builder = InlineKeyboardBuilder()
    # –°–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons: list[InlineKeyboardButton] = []

    if args:
        for button in args:
            buttons.append(InlineKeyboardButton(
                text=LEXICON[button] if button in LEXICON else button,
                callback_data=button))
    if kwargs:
        for button, text in kwargs.items():
            buttons.append(InlineKeyboardButton(
                text=text,
                callback_data=button))

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º row —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ width
    kb_builder.row(*buttons, width=width)

    return kb_builder.as_markup()


def generate_cases_kb(cases: list) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    case_names = [(case['case_name'], case['id']) for case in cases]
    for name, case_id in case_names:
        button = InlineKeyboardButton(text=name, callback_data=f'case_id_{case_id}')
        keyboard.inline_keyboard.append([button])

    keyboard.inline_keyboard.append([InlineKeyboardButton(text='‚û°Ô∏è –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–µ–ª–æ', callback_data='add_case')])
    keyboard.inline_keyboard.append([InlineKeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')])

    return keyboard